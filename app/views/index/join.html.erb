<div id='middle' class='join'>
  <a class="join_link" style="position: absolute; left: -2000px;"><%= request.url %></a>
  <div style='white-space: nowrap;'>
    <p id='mirror_welcome' style='display: none; white-space: normal; margin-bottom: 20px;'>Welcome to the Co-VidSpeak demo! This room is a <b>practice
    room</b> where you'll see a mirror of yourself. <i>You can't add
    anybody else to this room</i>. You'll need to 
    <a href="https://www.covidspeak.org/contact.html" target='_blank'>request a join code</a>
    in order to start a room for two-person video calling, but this 
    room will let you see how Co-VidSpeak works, first-hand!</p>
    <span id='learn_first' style='display: none; float: right; margin-bottom: 5px; max-width: 45vw; height: auto; min-height: 50px;'><button id='learn_first_link' href="#">Learn How to Use Co-VidSpeak</button></span>
    <span style='margin-top: 20px; display: inline-block;'>
      <span id="ready_to_chat">Ready to chat</span><span id='mirror_text' style='display: none;'> <b>with yourself</b></span>? 
    </span>
  </div>
  <div class='preview' id='preview_box'>
    <div class='status'>
      <div id='message'>
      </div>
      <div id='popout' style='display: none;'>
        <b>Try opening in your device's browser</b>
      </div>
    </div>
  </div>
  <div class='big_checkbox' style='margin: 10px 0; padding-left: 52px; text-align: left; padding-top: 0; font-size: 14px;'>
    <label>
      <input type='checkbox' id='accept' style='margin-top: -5px;'/>
      By using the product, you are agreeing that you have read and understood the <a href="/terms">Terms of Use and License Agreement</a>, and are capable of binding to a legal contract.
    </label>
  </div>
  
  <div class='room_status' style='margin-top: 20px; font-size: 20px;'>
    Initializing...
  </div>
  <a class='joinable join' style='display: none;' href="/rooms/<%= params['room_id'] %>">
    <img src="/logo.svg" class='img_logo' style='height: 50px; margin: -10px 0;'/>
    Join the Room
    <div id="accept_reminder" style='color: #800; font-size: 14px; visibility: hidden;'>
      You must accept the terms before entering
    </div>
  </a>
  <div class="pending_room" style='display: none;'>
    <img src="/logo.svg" class='img_logo' style='float: left; height: 50px; margin-right: 10px;'/>
    <div class='title'>
      This room hasn't been started yet, stay tuned...
      <span class='pending_room_status'></span>
    </div>
    <div class='time'>
      Scheduled For: 
      <span class='time_string'></span>
    </div>
  </div>
  <div class='joinable buttons' style='display: none;'>
    <button id='copy'>
      <img class='icon' src='/icons/clipboard.svg' alt='' style='height: 25px; vertical-align: bottom;'/>
      Copy Link to Share
      <div id="copy_confirm" style='color: #19558a; font-size: 14px; display: none;'>
        Copied to clipboard!
      </div>
    </button>
    <button id='share'>
      <img class='icon' src='/icons/reply.svg' alt='' style='height: 25px; vertical-align: bottom;'/>
      Share Link
    </button>
  </div>
</div>
<script>
var room_id = "<%= params['room_id'] %>";
var match = location.href.match(/rooms\/(.+)+\/join/);
var load_room = function() {
  document.querySelector('.room_status').innerText = "Checking Room...";
  document.querySelector('.pending_room_status').innerText = "Checking Room...";
  var room_ready = function() {
    getMedia();
    if(match && match[1] && !match[1].match(/^(mirror|teach)/)) {
      // Mark the room as ready to be entered
      room_pending();
    }
    document.querySelector('.room_status').style.display = 'none';
    document.querySelector('.pending_room').style.display = 'none';
    document.querySelectorAll('.joinable').forEach(function(elem) {
      elem.style.display = 'block';
    });  
  };
  
  if(location.href.match(/rooms\/mirror/) || location.href.match(/rooms\/teach/)) {
    room_ready();
  } else {
    var data = {
      system: input.compat.system,
      browser: input.compat.browser,
      mobile: !!input.compat.mobile,
      pending_id: localStorage.pending_id
    };
    session.ajax("/api/v1/rooms/" + room_id + "/status", {type: 'GET', data: data}).then(function(res) {
      load_room.errors = 0;
      document.querySelector('.pending_room_status').innerText = "";
      if(res.pending) {
        room_id = res.code;
        document.querySelector('.join_link').innerText = location.origin + "/rooms/" + room_id + "/join";
        document.querySelector('.room_status').style.display = 'none';
        document.querySelector('.pending_room').style.display = 'block';
        document.querySelector('.buttons').style.display = 'block';
        var time_string = window.moment(res.start_at).format('D MMM, YYYY h:mma')
        document.querySelector('.time_string').innerText = time_string;
        setTimeout(load_room, 30000);
      } else {
        room_id = res.code;
        document.querySelector('a.join').href = "/rooms/" + room_id;
        room_ready();
      }
    }, function(err) {
      if(err && err.responseJSON && err.responseJSON.error == "no room found") {
        document.querySelector('.room_status').innerText = "Room Not Available";
      } else {
        load_room.errors = (load_room.errors || 0) + 1;
        document.querySelector('.room_status').innerText = "Couldn't Load Room, Trying Again...";
        document.querySelector('.pending_room_status').innerText = "Couldn't Load Room, Trying Again...";
        if(load_room.errors > 5) {
          setTimeout(load_room, 15000);
        } else {
          setTimeout(load_room, 2000);    
        }
      }
    });  
  }
}
var mini_room_id = room_id.substring(0, 5);
var re = new RegExp("^" + mini_room_id);
if(!(localStorage.pending_id || '').match(re)) {
  localStorage.pending_id = mini_room_id + "-" + Math.round(Math.random() * 999999) + "." + (new Date()).getTime();
}
load_room();
if(navigator.canShare && navigator.canShare()) {
  document.querySelector("#share").style.display = 'inline';
}
if(localStorage.terms_accepted) {
  document.querySelector('#accept').checked = true;
}
if(!navigator.share) {
  document.querySelector('#share').style.display = 'none';
  document.querySelector('#copy').classList.add('solo')
}
localStorage.removeItem('teach_return_url');
if(localStorage.room_id != room_id) {
  localStorage.removeItem('self_as_communicator');  
}
document.addEventListener('click', function(event) {
  var url = (document.querySelector('.join_link') || {}).innerText;
  if(event.target.closest('a.join')) {
    event.preventDefault();
    if(!document.querySelector('#accept').checked) {
      document.querySelector('#accept_reminder').style.visibility = 'visible';
      return;
    }
    localStorage.terms_accepted = 'true';    
    room.cleanup();
    location.href = event.target.closest('a.join').href;
  } else if(event.target.id == 'popout_browser') {
    room.cleanup();
    window.open(location.href, '_system');
  } else if(event.target.id == 'learn_first_link') {
    var go = function() {
      if(go.going) { return; }
      go.going = true;
      localStorage.teach_return_url = url;
      location.href = '/rooms/teach-me-how';
    };
    session.ajax("/api/v1/rooms/" + match[1] + "/coming", {type: 'GET', data: {status: 'training'}}).then(function(res) {
      go();
    }, function(err) { go(); });
    setTimeout(function() {
      go();
    }, 1000);
    localStorage.teach_return_url = url;
    location.href = '/rooms/teach-me-how';
    return;
  }
  if(event.target.id ==  'copy') {
    extras.copy(url).then(function() {
      document.querySelector('#copy_confirm').style.display = 'block';
      document.querySelector('#copy_confirm').style.visibility = 'visible';
    });
  } else if(event.target.id == 'share') {
    if(navigator.share) {
      navigator.share({url: url});
    }
  }
});
if(location.href.match(/rooms\/mirror/)) {
  document.querySelector('#mirror_text').style.display = 'inline';
  document.querySelector('#mirror_welcome').style.display = 'block';
}
if(location.href.match(/rooms\/mirror/) || location.href.match(/rooms\/teach/)) {
  document.querySelector('.buttons').style.display = 'none';
  document.querySelector('a.join').style.width = '100%';
}
if(location.href.match(/rooms\/teach/)) {
  document.querySelector('#ready_to_chat').innerText = "Ready to Learn";
} else {
  document.querySelector('#learn_first').style.display = 'inline';
  document.querySelector('#ready_to_chat').innerText = "Ready to Chat";
}
var room_pending = function() {
  if(match && match[1] && !match[1].match(/^(mirror|teach)/)) {
    var data = {
      status: 'ready_to_enter',
      system: input.compat.system,
      browser: input.compat.browser,
      mobile: !!input.compat.mobile
    };
    data.pending_id = localStorage.pending_id;
    session.ajax("/api/v1/rooms/" + match[1] + "/coming", {type: 'GET', data: data}).then(function(res) {
    }, function(err) { });
  }  
}
function getMedia() {
  var status = function(message, options) {
    if(document.querySelector('#middle .preview .status #message')) {
      if(options && options.big) {
        document.querySelector('#middle .preview .status').classList.add('big');
      } else {
        document.querySelector('#middle .preview .status').classList.remove('big');
      }
      document.querySelector('#middle .preview .status #message').innerText = message;
      document.querySelector('#middle .preview .status #popout').style.display = 'none';
      if(options && options.popout) {
        document.querySelector('#middle .preview .status #popout').style.display = 'block';
      }  
    }
  };
  room.join_status = status;
  var handled = false;
  document.querySelector('#preview_box').classList.add('ready');
  setTimeout(function() {
    if(!handled) {
      status("Waiting for camera...");
      document.querySelector('#middle .preview .status').classList.add('waiting');
    }
  }, 500);
  if(navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {
    room.load_settings();
    input.request_media(room.input_settings).then(function(stream) {
      handled = true;
      room.other_tracks = room.other_tracks || [];
      stream.getTracks().forEach(function(track) {
        room.other_tracks.push(track);
      });
      var vid_track = stream.getVideoTracks()[0];
      if(vid_track) {
        var video = document.createElement('video');
        var vid_stream = new MediaStream();
        vid_stream.addTrack(vid_track);
        video.srcObject = vid_stream;
        video.onloadedmetadata = function(e) {
          video.play();
        };  
        document.querySelector('#middle .preview').innerText = "";
        document.querySelector('#middle .preview').appendChild(video);
      }
      var aud_track = stream.getAudioTracks()[0];
      if(aud_track) {
        var aud_stream = new MediaStream();
        aud_stream.addTrack(aud_track);
        var audio = document.createElement('audio');
        document.querySelector('#middle').appendChild(audio);
        audio.srcObject = aud_stream;
        audio.preview = true;
        audio.muted = true;
        audio.onloadedmetadata = function(e) {
          audio.play();
        };
        analyser = input.track_audio(audio, {mediaStreamTrack: aud_track}, {});
        if(analyser) {
          analyser.callback = function(output) {
            if(!audio.parentNode) {
              analyser.release();
            }
          }  
        }
      }
    }, function(err) {
      handled = true;
      room.handle_camera_error(err, status);    
    });
    setTimeout(function() {
      if(!handled) { 
        room.handle_camera_error({timeout: true}, status);
      }
    }, 5000);  
  } else {
    room.handle_camera_error(null, status);
  }
};

</script>